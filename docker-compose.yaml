version: "3.8"
networks:
  localdev:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}-nginx
    ports:
      - "8088:80"
    links:
      - php
      - postgres
    volumes:
      # - ./nginx/server.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/html
    depends_on:
      - php
      - postgres
    networks:
      - localdev

  postgres:
    image: postgres:15.5-alpine
    container_name: ${APP_NAME}-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql
    tty: true
    networks:
      - localdev

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: ${APP_NAME}-php
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
      - "5902:5902"
    networks:
      - localdev

  composer:
    image: composer
    container_name: ${APP_NAME}-composer
    working_dir: /var/www/html
    restart: 'no'
    volumes:
      - ./src:/var/www/html
    networks:
      - localdev

  artisan:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: ${APP_NAME}-artisan
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - localdev

  npm:
    image: node:current-alpine
    container_name: ${APP_NAME}-npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - localdev
